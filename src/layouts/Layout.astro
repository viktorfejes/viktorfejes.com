---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import GrainOverlay from "../components/GrainOverlay.astro";

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={ title } />
	</head>
	<body>
		<!-- <div class="lines max-w-8xl mx-8"></div> -->
		<Header />
        <main>
			<slot />
        </main>
		<Footer />
		<script src="../scripts/main.js"></script>
	</body>
</html>

<style>
	main {
		width: 100%;
		display: flex;
		position: relative;
		align-content: center;
		align-items: center;
		flex-direction: column;
	}
</style>

<style is:global>
	body {
		/* perspective: 1000px; */
	}

	.lines {
		position: fixed;
		width: 100%;
		height: 100%;
		left: 50%;
		transform: translateX(-50%);
		background: linear-gradient(
			90deg,
			rgba(255, 255, 255, 0.1) 0%,
			rgba(255, 255, 255, 0.1) 1px,
			transparent 1px,
			transparent 50%,
			rgba(255, 255, 255, 0.1) 50%,
			rgba(255, 255, 255, 0.1) calc(50% + 1px),
			transparent calc(50% + 1px),
			transparent calc(100% - 1px),
			rgba(255, 255, 255, 0.1) calc(100% - 1px)
		);
	}
</style>

<script>
	const observer = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				entry.target.classList.add("element-enter");
				entry.target.classList.remove("element-leave");
			} else {
				// entry.target.classList.remove("element-enter");
				// entry.target.classList.add("element-leave");
			}
		});
	});

	document.querySelectorAll(".element-animate").forEach((el) => observer.observe(el));
</script>