---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

interface Props {
    src: string;
    alt: string;
    path: string;
}

const { src, alt, path, classList } = Astro.props;

let image_src = `/src/assets/images/${path}/${src}`;
if (path == "" || path == "/") {
    image_src = `/src/assets/images/${src}`;
}

const images = import.meta.glob<{ default: ImageMetadata }>(
    "/src/assets/images/**/*.{jpg,jpeg,png}",
);
if (!images[image_src]) {
    throw new Error(`"${image_src}" not found in "/src/assets/images/${path}`);
}

// Await dynamic import
const resolved_image = await images[image_src]();
---

<Image
    class={`w-full h-auto ${classList}`}
    src={resolved_image.default}
    alt={alt}
    loading="lazy"
    widths={[240, 540, 720, 1300]}
    sizes={`(max-width: 639px) 240px, (max-width: 767px) 540px, (max-width: 1023px) 720px, 1300px`}
/>
