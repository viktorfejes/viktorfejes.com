---
import { type CollectionEntry, getCollection } from 'astro:content';
import { render } from 'astro:content';

import Layout from "../../layouts/Global.astro";
import FormattedDate from '../../components/FormattedDate.astro';

import { components } from "../../components/BlogComponents";

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.id },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(post);
---
<Layout title=`${post.data.title} - Viktor Fejes` header="short">
    <article class="flex flex-col items-center w-full max-w-xl">
        <div class="w-full max-w-xl prose">
            <header class="mb-8">
                <h1 class="text-2xl font-medium dark:text-neutral-300 mb-2">{post.data.title}</h1>
                <div class="date text-neutral-400 dark:text-neutral-600">
                    <FormattedDate date={post.data.pubDate} />
                    {
                        post.data.updatedDate && (
                            <div class="last-updated-on">
                                Last updated on <FormattedDate date={post.data.updatedDate} />
                            </div>
                        )
                    }
                    <span>Â· {remarkPluginFrontmatter.minutesRead}</span>
                </div>
            </header>
            <Content components={components} />
        </div>
    </article>
</Layout>

<style>
    .prose :global(p),
    .prose :global(ul) {
        font-size: var(--text-lg);
        margin-bottom: calc(var(--spacing) * 6);
    }

    .prose :global(h2) {
        font-size: var(--text-xl);
        font-weight: var(--font-weight-medium);
        margin-top: 2em;
        margin-bottom: 0.5em;
    }

    :global(.dark) .prose :global(h2) {
        color: var(--color-neutral-300);
    }

    .prose :global(ul) {
        list-style-type: disc;
        padding-left: calc(var(--spacing) * 8);
    }

    .prose :global(li) {
        margin-bottom: calc(var(--spacing) * 2);
    }
</style>
