---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import {
    injectSpanLetters,
    formatDate,
    calcReadTime,
} from "../../assets/scripts/utils.js";
import ContentImg from "../../components/ContentImg.astro";

export async function getStaticPaths() {
    const journalPosts = await getCollection("journal");
    return journalPosts.map((journal) => ({
        params: { slug: journal.slug },
        props: { journal },
    }));
}

const { journal } = Astro.props;
const { Content } = await journal.render();

const titleLetters = injectSpanLetters(journal.data.title);
const readTime = calcReadTime(journal.body);
---

<Layout title=`${journal.data.title} - Viktor Fejes` theme="light">
    <article class="journal">
        <header class="journal-header">
            <p class="journal-marker">Journal</p>
            <h1 class="journal-title">
                {
                    titleLetters.map((letter) =>
                        letter.class ? (
                            <span class={letter.class}>{letter.char}</span>
                        ) : (
                            letter.char
                        ),
                    )
                }
            </h1>
            <p class="journal-meta">
                {readTime} min read Â· {
                    formatDate(journal.data.date, {
                        month: "long",
                        day: "numeric",
                        year: "numeric",
                    })
                }
            </p>
        </header>
        <div class="journal-thumbnail">
            <ContentImg
                src={journal.data.thumbnail}
                alt={journal.data.title}
                dir="journal"
            />
        </div>
        <div class="journal-body">
            <Content />
        </div>
    </article>
</Layout>

<style>
    .journal {
        padding: 5rem 2rem;
        /* padding-top: 5rem; */
    }

    .journal-header {
        width: 100%;
        max-width: var(--journal-width);
        margin: 0 auto;
        margin-bottom: 4rem;
    }

    .journal-marker {
        color: var(--tertiary-color);
    }

    .journal-header h1 {
        font-size: 3.5rem;
        font-weight: 800;
        line-height: 1.2;
        letter-spacing: -0.03rem;
        margin: 0 0 1rem 0;
        color: var(--primary-color);
        color: var(--secondary-color);
    }

    .journal-meta {
        color: var(--tertiary-color);
    }

    .journal-body :global(pre),
    .journal-body :global(h1),
    .journal-body :global(h2),
    .journal-body :global(h3),
    .journal-body :global(h4),
    .journal-body :global(h5),
    .journal-body :global(h6),
    .journal-body :global(ul) {
        width: 100%;
        max-width: var(--thin-width);
        margin: 0 auto;
    }

    .journal-body {
        width: 100%;
        max-width: var(--content-width);
        margin: 0 auto;
        color: var(--offwhite-color);
        color: var(--secondary-color);

        font-size: 1.25rem;
        line-height: 1.8;
    }

    .journal-thumbnail {
        width: 100%;
        max-width: var(--content-width);
        margin: 0 auto;
        margin-bottom: 3rem;
        border-radius: 1rem;
        overflow: hidden;
    }

    .journal-thumbnail img {
        width: 100%;
        height: auto;
        object-fit: cover;
    }

    .journal-body :global(img) {
        display: block;
        width: 100%;
        height: auto;
        margin: 0 auto;
        margin-bottom: 2rem;
        border-radius: 1rem;
        max-width: var(--journal-width);
    }

    .journal-body :global(p) {
        font-size: 1.25rem;
        line-height: 1.8;
        max-width: var(--thin-width);
        margin: 0 auto;
        margin-bottom: 1.5rem;
    }

    .journal-body :global(ul) {
        margin-bottom: 1.5rem;
    }

    .journal-body :global(h2) {
        font-size: 2rem;
        font-weight: 800;
        line-height: 1.2;
        letter-spacing: -0.02rem;
        margin-bottom: 1.5rem;
        margin-top: 3rem;
    }
</style>
